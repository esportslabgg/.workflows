on:
  workflow_call:
    inputs:
      DOCKERFILE_NAME:
        default: "Dockerfile"
        required: false
        type: string
      APP_VERSION:
        required: true
        type: string
      PACKAGE_NAME:
        required: true
        type: string
      K8S_OBJECT:
        required: true
        type: string
      K8S_NAME:
        required: true
        type: string
      K8S_RG_NAME:
        required: true
        type: string
      K8S_NAMESPACE:
        required: true
        type: string
      AZ_REGISTRY_URL:
        required: true
        type: string
    secrets:
      DEPLOY_TOKEN:
        required: true
      REGISTRY_USERNAME:
        required: true
      REGISTRY_PASSWORD:
        required: true
      

# Environment variables available to all jobs and steps in this workflow
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        token: '${{ secrets.DEPLOY_TOKEN }}'
        submodules: 'recursive'
    
    # Connect to Azure Container Registry (ACR)
    - uses: azure/docker-login@v1
      with:
        login-server: ${{ inputs.AZ_REGISTRY_URL }}
        username: ${{ secrets.REGISTRY_USERNAME }} 
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    # Container build and push to a Azure Container Registry (ACR)
    - run: |
        docker build . -t ${{ inputs.AZ_REGISTRY_URL }}/${{ inputs.PACKAGE_NAME }}:${{ inputs.APP_VERSION }} -f ./${{ inputs.DOCKERFILE_NAME }}
        docker push ${{ inputs.AZ_REGISTRY_URL }}/${{ inputs.PACKAGE_NAME }}:${{ inputs.APP_VERSION }}
    
    # Set the target Azure Kubernetes Service (AKS) cluster. 
    - uses: azure/aks-set-context@v1
      with:
        method: service-principal
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ inputs.K8S_NAME }}
        resource-group: ${{ inputs.K8S_RG_NAME }}
    
    
    # Deploy app to AKS
    - run: | #add fallback when object does not exist to build from manifests maybe?
        kubectl -n ${{ inputs.K8S_NAMESPACE }} get ${{ inputs.K8S_OBJECT }} -oyaml | sed -e "s#\(${{ inputs.AZ_REGISTRY_URL }}/.*:\).*#\1${{ inputs.APP_VERSION }}#ig" | kubectl -n ${{ inputs.K8S_NAMESPACE }} apply -f -
