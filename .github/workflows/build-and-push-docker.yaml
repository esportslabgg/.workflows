on:
  workflow_call:
    inputs:
      DOCKERFILE_NAME:
        default: "Dockerfile"
        required: false
        type: string
      APP_VERSION:
        required: true
        type: string
      PACKAGE_NAME:
        required: false
        type: string
      ACR_RUN_FILE:
        required: false
        type: string
      AZ_REGISTRY_URL:
        required: true
        type: string
    secrets:
      DEPLOY_TOKEN:
        required: false
      AZURE_CREDENTIALS:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Wrong configuration
      if: "${{ (inputs.PACKAGE_NAME != '') && (inputs.ACR_RUN_FILE != '') }}"
      run: |
        echo "PACKAGE_NAME and ACR_RUN_FILE cannot be declared in the same run"
        exit 1
    - name: Checkout with dependencies
      uses: actions/checkout@v3
      env:
        DEPLOY_TOKEN: '${{ secrets.DEPLOY_TOKEN }}'
      if: "${{ env.DEPLOY_TOKEN != '' }}"
      with:
        token: '${{ secrets.DEPLOY_TOKEN }}'
        submodules: 'recursive'
        
    - name: Checkout without dependencies
      uses: actions/checkout@v3
      env:
        DEPLOY_TOKEN: '${{ secrets.DEPLOY_TOKEN }}'
      if: "${{ env.DEPLOY_TOKEN == '' }}"

    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    # Container build and push to a Azure Container Registry (ACR)        
    - name: Build single image
      if: "${{ inputs.PACKAGE_NAME != '' }}"
      run: |
        az acr build -t ${{ inputs.AZ_REGISTRY_URL }}/${{ inputs.PACKAGE_NAME }}:${{ inputs.APP_VERSION }} -r $(echo ${{ inputs.AZ_REGISTRY_URL }} | cut -d. -f1) -f ${{ inputs.DOCKERFILE_NAME }} .
    
    - name: Build from acr run file
      if: "${{ inputs.ACR_RUN_FILE != '' }}"
      run: |
        az acr run -f ${{ inputs.ACR_RUN_FILE }} -r $(echo ${{ inputs.AZ_REGISTRY_URL }} | cut -d. -f1) --set TAG_NAME=${{ inputs.APP_VERSION }}
        
